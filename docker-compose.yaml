#version: "3.9"

services:
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  database:
    image: postgres:latest
    restart: always
    env_file:
      - .env  # Загружаем переменные из .env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env  # Используем .env для приложения

  tests:
    build: .
    command: sh -c "pytest --cov=."
    env_file:
      - .env
    depends_on:
      - database
      - redis


  celery:
    build: .
    command: celery -A config worker --loglevel=DEBUG
    depends_on:
      - redis
      - database
    env_file:
      - .env  # Используем .env для Celery

  celery-beat:
    build: .
    command: celery -A config beat --loglevel=DEBUG
    depends_on:
      - redis
      - database
    env_file:
      - .env  # Используем .env для Celery Beat

volumes:
  pg_data:
